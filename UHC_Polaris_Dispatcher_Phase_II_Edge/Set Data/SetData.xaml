<Activity mc:Ignorable="sap sap2010" x:Class="SetData" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_SystemError" Type="OutArgument(s:Exception)" />
    <x:Property Name="io_CommonLogData" Type="InOutArgument(x:String)" />
    <x:Property Name="in_ProjectName" Type="InArgument(x:String)" />
    <x:Property Name="in_StartTime" Type="InArgument(s:DateTime)" />
    <x:Property Name="io_AppInstance" Type="InOutArgument(scg:List(x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1256.66666666667,1360</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>AddingQueueItems_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="25">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="62">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="SetData" sap:VirtualizedContainerService.HintSize="1266.66666666667,1295.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="arrDownTime" />
      <Variable x:TypeArguments="x:Boolean" Name="bolIsDownTime" />
      <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtMyClaimQueue" />
      <Variable x:TypeArguments="x:Int32" Name="intClaimCount" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtGetNextQueue" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1035-2" sap:VirtualizedContainerService.HintSize="1224.66666666667,52.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="[in_Config(&quot;LogFile&quot;).ToString]">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="logCode">1035-2</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_Config("LogFile").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <TryCatch DisplayName="Try Catch: Set Data" sap:VirtualizedContainerService.HintSize="1224.66666666667,1110.66666666667" sap2010:WorkflowViewState.IdRef="TryCatch_14">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Flowchart sap2010:Annotation.AnnotationText="Set the Claim ID and Edit Code from the Cirrus Application to Orchestrator Queue." DisplayName="Set Claim Data" sap:VirtualizedContainerService.HintSize="1186,849.333333333333" sap2010:WorkflowViewState.IdRef="Flowchart_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <av:Point x:Key="ShapeLocation">20,2.5</av:Point>
              <av:Size x:Key="ShapeSize">60,74.6666666666667</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">80,39.8333333333333 110,39.8333333333333 110,41.6666666666667 260,41.6666666666667</av:PointCollection>
              <x:Double x:Key="Width">1152</x:Double>
              <x:Double x:Key="Height">813</x:Double>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Flowchart.StartNode>
            <x:Reference>__ReferenceID11</x:Reference>
          </Flowchart.StartNode>
          <FlowDecision x:Name="__ReferenceID0" Condition="[dtMyClaimQueue.Rows.Count &gt;0]" DisplayName="MyClmRows" sap:VirtualizedContainerService.HintSize="71.3333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="FlowDecision_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <av:Point x:Key="ShapeLocation">783.5,426.5</av:Point>
                <av:Size x:Key="ShapeSize">71.3333333333333,86.6666666666667</av:Size>
                <av:PointCollection x:Key="TrueConnector">783.5,470 753.5,470 753.5,530 650.895,530</av:PointCollection>
                <av:PointCollection x:Key="FalseConnector">854.833333333333,469.833333333333 970,469.833333333333 970,560</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <FlowDecision.True>
              <FlowStep x:Name="__ReferenceID10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">388.895,500</av:Point>
                    <av:Size x:Key="ShapeSize">262,62</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">519.895,562 519.895,592 520,592 520,614.5</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign: dtMyClaimQueue" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_19">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtMyClaimQueue]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dtMyClaimQueue.AsEnumerable().Take(Convert.ToInt32(in_Config("MaxLock_Allowed"))).CopyToDataTable()]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">420,614.5</av:Point>
                        <av:Size x:Key="ShapeSize">200,52.6666666666667</av:Size>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtMyClaimQueue]" DisplayName="MyClaimQueueFor Each Row" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Sequence: Bot Down Time Sequence" sap:VirtualizedContainerService.HintSize="898,596.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_94">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[ShouldStop or bolIsDownTime]" DisplayName="If: ShoulStop" sap:VirtualizedContainerService.HintSize="856,504.666666666667" sap2010:WorkflowViewState.IdRef="If_1">
                              <If.Then>
                                <Sequence DisplayName="Bot Down Time Sequence" sap:VirtualizedContainerService.HintSize="376,350.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_93">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message: Bot Down " sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Bot has Reached doowntime Limit thus sending the Bot to Stop Stage&quot;]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                  <Assign DisplayName="Assign: bolIsDownTime" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_18">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[bolIsDownTime]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                  <ui:Break DisplayName="Break: loop" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <TryCatch DisplayName="Try Catch: Bot Down Time Sequence" sap:VirtualizedContainerService.HintSize="434,337.333333333333" sap2010:WorkflowViewState.IdRef="TryCatch_15">
                                  <TryCatch.Try>
                                    <Sequence DisplayName="Sequence: Bot Down Time Sequence" sap:VirtualizedContainerService.HintSize="411.333333333333,448" sap2010:WorkflowViewState.IdRef="Sequence_101">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:LogMessage DisplayName="Log Message: Bot Down Time " sap:VirtualizedContainerService.HintSize="369.333333333333,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_12" Message="[&quot;Claim Detail retrieving and adding to queue started&quot;]" />
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke FetchClaimSpecificData_N_AddToQueue workflow" sap:VirtualizedContainerService.HintSize="369.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_84" UnSafe="False" WorkflowFileName="Set Data\FetchClaimSpecificData_N_AddToQueue.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InOutArgument x:TypeArguments="x:String" x:Key="io_CommonLogData" />
                                          <InArgument x:TypeArguments="x:String" x:Key="in_ProjectName">[in_ProjectName]</InArgument>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                          <OutArgument x:TypeArguments="x:Int32" x:Key="out_ClaimCount" />
                                          <InOutArgument x:TypeArguments="scg:List(x:Object)" x:Key="io_AppInstance" />
                                          <InArgument x:TypeArguments="sd:DataRow" x:Key="in_DrMyClaimQueue">[row]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeWorkflowFile>
                                      <ui:LogMessage DisplayName="Log Message: Adding to  queue" sap:VirtualizedContainerService.HintSize="369.333333333333,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_13" Message="[&quot;Claim Detail retrieving and adding to queue ended&quot;]" />
                                    </Sequence>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="si:IOException" sap:VirtualizedContainerService.HintSize="400,165.333333333333" sap2010:WorkflowViewState.IdRef="Catch`1_21">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ActivityAction x:TypeArguments="si:IOException">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="si:IOException" Name="exception" />
                                        </ActivityAction.Argument>
                                        <ui:LogMessage DisplayName="Log Message: Exception" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_11" Message="[&quot;Exception in Add Queue Item &quot; + exception.Message]" />
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                              </If.Else>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEachRow>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.True>
            <FlowDecision.False>
              <FlowStep x:Name="__ReferenceID6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">839,560</av:Point>
                    <av:Size x:Key="ShapeSize">262,62</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">970,622 970,664.5</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign: bolIsDownTime" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_15">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[bolIsDownTime]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">870,664.5</av:Point>
                        <av:Size x:Key="ShapeSize">200,52.6666666666667</av:Size>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message: Bot Reached downtime" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Bot has Reached downtime Limit thus sending the Bot to Stop Stage&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.False>
          </FlowDecision>
          <FlowDecision x:Name="__ReferenceID3" Condition="[ShouldStop Or bolIsDownTime]" DisplayName="ShudStop" sap:VirtualizedContainerService.HintSize="70,86.6666666666667" sap2010:WorkflowViewState.IdRef="FlowDecision_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <av:Point x:Key="ShapeLocation">535,196.5</av:Point>
                <av:Size x:Key="ShapeSize">70,86.6666666666667</av:Size>
                <av:PointCollection x:Key="TrueConnector">535,240 271,240</av:PointCollection>
                <av:PointCollection x:Key="FalseConnector">605,240 660,240 660,317</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <FlowDecision.True>
              <FlowStep x:Name="__ReferenceID2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">9,210</av:Point>
                    <av:Size x:Key="ShapeSize">262,62</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">140,272 140,314.5</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign: bolIsDownTime" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[bolIsDownTime]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">40,314.5</av:Point>
                        <av:Size x:Key="ShapeSize">200,52.6666666666667</av:Size>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message: Down time true" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Bot has Reached doowntime Limit thus sending the Bot to Stop Stage&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.True>
            <FlowDecision.False>
              <FlowStep x:Name="__ReferenceID9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">560,317</av:Point>
                    <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">760,351.666666666667 790,351.666666666667 790,350.833333333333 840,350.833333333333</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Locking Claims Sequence" sap:VirtualizedContainerService.HintSize="990,640.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_98">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[convert.ToBoolean(in_Config(&quot;LockAPI_Implement&quot;))]" DisplayName="Lock API Implementation If" sap:VirtualizedContainerService.HintSize="948,548.666666666667" sap2010:WorkflowViewState.IdRef="If_5">
                    <If.Then>
                      <Sequence DisplayName="Lock API Sequence" sap:VirtualizedContainerService.HintSize="526,394.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_97">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[Convert.ToBoolean(in_Config(&quot;IsLockRequired&quot;))]" DisplayName="If: IsLockRequired" sap:VirtualizedContainerService.HintSize="484,240.666666666667" sap2010:WorkflowViewState.IdRef="If_4">
                          <If.Then>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke LockClaimSequence_API workflow" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_87" UnSafe="False" WorkflowFileName="Set Data\LockClaimSequence_API.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_JWTKey">[in_Config("CirrusAPI_JwtKey").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_JWTSecret">[in_Config("CirrusAPI_JwtSecret").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_UserIDsList">[in_Config("Lock_BotIDs_List").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_LastLockedUserID">[in_Config("Last_Locked_BotID").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ClaimLockCount">[in_Config("MaxClaimLock").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_QueueCategory">[in_Config("LockQueueCategory").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_CirrusLockAPIUrl">[in_Config("CirrusAPI_BaseUrl").ToString+"claim-locks/v1.0"]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AssetName">Last_Locked_BotID</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </If.Then>
                        </If>
                        <ui:ShouldStop DisplayName="Should Stop: ShouldStop" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="ShouldStop_8" Result="[ShouldStop]" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Sequence: Lock Claims" sap:VirtualizedContainerService.HintSize="376,382.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_102">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GeneralQueue_LockClaims workflow" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_88" UnSafe="False" WorkflowFileName="Set Data\GeneralQueue_LockClaims.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                              <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                            </InArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="io_CommonLogData">
                              <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="io_CommonLogData" />
                            </InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_ProjectName">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ProjectName" />
                            </InArgument>
                            <InArgument x:TypeArguments="s:DateTime" x:Key="in_StartTime">
                              <mva:VisualBasicValue x:TypeArguments="s:DateTime" ExpressionText="DateTime.Now" />
                            </InArgument>
                            <OutArgument x:TypeArguments="x:Int32" x:Key="out_ClaimCount">
                              <mva:VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="intClaimCount" />
                            </OutArgument>
                            <OutArgument x:TypeArguments="x:Boolean" x:Key="out_ShouldStop">
                              <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="ShouldStop" />
                            </OutArgument>
                            <InOutArgument x:TypeArguments="scg:List(x:Object)" x:Key="io_AppInstance">
                              <mva:VisualBasicReference x:TypeArguments="scg:List(x:Object)" ExpressionText="io_AppInstance" />
                            </InOutArgument>
                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_GeneralQueue">
                              <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dtGetNextQueue" />
                            </OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <Assign DisplayName="Assign: dtGetNextQueue" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_21">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataTable">[dtGetNextQueue]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataTable">[dtGetNextQueue]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign: intClaimCount" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_20">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intClaimCount]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[intClaimCount]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">840,324.5</av:Point>
                        <av:Size x:Key="ShapeSize">200,52.6666666666667</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">940,377.166666666667 940,407.166666666667 819.166666666667,407.166666666667 819.166666666667,426.5</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke FetchDataFromMyClaimQueue workflow" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_79" UnSafe="False" WorkflowFileName="Set Data\FetchDataFromMyClaimQueue.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                        <InOutArgument x:TypeArguments="x:String" x:Key="io_CommonLogData">[io_CommonLogData]</InOutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_ProjectName">[in_ProjectName]</InArgument>
                        <OutArgument x:TypeArguments="x:Int32" x:Key="out_ClaimCount">[intClaimCount]</OutArgument>
                        <InOutArgument x:TypeArguments="scg:List(x:Object)" x:Key="io_AppInstance">[io_AppInstance]</InOutArgument>
                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_MyClaimQueue">[dtMyClaimQueue]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <FlowStep.Next>
                      <x:Reference>__ReferenceID0</x:Reference>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.False>
          </FlowDecision>
          <x:Reference>__ReferenceID1</x:Reference>
          <FlowStep x:Name="__ReferenceID11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">260,7</av:Point>
                <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">360,76.3333333333333 360,96.5</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Get To and From Time" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_89">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign: arrDownTime" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[arrDownTime]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[If(in_Config("DownTime").ToString.Contains(","), in_Config("DownTime").ToString.Split(New String(){","}, StringSplitOptions.RemoveEmptyEntries).ToArray, {in_Config("DownTime").ToString})]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign: bolIsDownTime" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[bolIsDownTime]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">[arrDownTime.Where(Function(x) DateTime.Now.TimeOfDay&gt;= TimeSpan.Parse(x) And DateTime.Now.TimeOfDay &lt;= (TimeSpan.Parse(x)+TimeSpan.Parse(in_Config("IntervalTime").ToString))).Count&gt;0]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ShouldStop DisplayName="Check Stop Signal: ShoulStop" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="ShouldStop_4" Result="[ShouldStop]" />
            </Sequence>
            <FlowStep.Next>
              <FlowDecision x:Name="__ReferenceID4" Condition="[bolIsDownTime Or ShouldStop]" DisplayName="ShudStop" sap:VirtualizedContainerService.HintSize="70,86.6666666666667" sap2010:WorkflowViewState.IdRef="FlowDecision_11" True="{x:Reference __ReferenceID2}" False="{x:Reference __ReferenceID3}">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <av:Point x:Key="ShapeLocation">325,96.5</av:Point>
                    <av:Size x:Key="ShapeSize">70,86.6666666666667</av:Size>
                    <av:PointCollection x:Key="FalseConnector">395,140 570,140 570,196.5</av:PointCollection>
                    <av:PointCollection x:Key="TrueConnector">325,140 140,140 140,210</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </FlowDecision>
            </FlowStep.Next>
          </FlowStep>
          <x:Reference>__ReferenceID4</x:Reference>
          <x:Reference>__ReferenceID5</x:Reference>
          <x:Reference>__ReferenceID2</x:Reference>
          <x:Reference>__ReferenceID6</x:Reference>
          <x:Reference>__ReferenceID7</x:Reference>
          <x:Reference>__ReferenceID8</x:Reference>
          <x:Reference>__ReferenceID9</x:Reference>
          <x:Reference>__ReferenceID10</x:Reference>
        </Flowchart>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1190.66666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_19">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Sequence: Exception" sap:VirtualizedContainerService.HintSize="304,213.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_92">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign: Exception" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_16">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">[out_SystemError]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                </Assign.Value>
              </Assign>
              <Rethrow DisplayName="Rethrow SE" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Rethrow_8" />
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="1190.66666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_20">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow DisplayName="Rethrow BE" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_9" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>