<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1477.33333333333,936" sap2010:WorkflowViewState.IdRef="Main2_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <StateMachine InitialState="{x:Reference __ReferenceID14}" sap2010:Annotation.AnnotationText="OGS HiLevel Project Layout" DisplayName="General Business Process" sap:VirtualizedContainerService.HintSize="1487.33333333333,871.333333333333" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">0,22.5</av:Point>
        <x:Double x:Key="StateContainerWidth">1453.6</x:Double>
        <x:Double x:Key="StateContainerHeight">804.5</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">60,60.1 90,60.1 90,26.74 133,26.74</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID9" sap2010:Annotation.AnnotationText="Set all the global variables null.&#xA;Clean the process.&#xA;Final State." DisplayName="Finalize" sap:VirtualizedContainerService.HintSize="204.666666666667,184.666666666667" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
      <State.Entry>
        <Sequence sap2010:Annotation.AnnotationText="Clean your global variables here." DisplayName="Sequence-CleanUpCode" sap:VirtualizedContainerService.HintSize="375.2,1509.6" sap2010:WorkflowViewState.IdRef="Sequence_58">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Clean Up" sap:VirtualizedContainerService.HintSize="333.6,1052.8" sap2010:WorkflowViewState.IdRef="Sequence_46">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Set TransactionItem" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_67">
              <Assign.To>
                <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Set SystemError" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_68">
              <Assign.To>
                <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Set BusinessRuleException" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_69">
              <Assign.To>
                <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Set TransactionNumber" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_70">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[TransactionNumber]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Nothing]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Set Config" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_71">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[Config]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[Nothing]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Set RetryNumber" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_72">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[RetryNumber]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Nothing]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Set TransactionField1" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_73">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[TransactionField1]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Set TransactionID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_74">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[TransactionID]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Set OuputJSON" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_75">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[OutputJSON]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Set FirstRun" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_76">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[FirstRun]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">[Nothing]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Assign DisplayName="Set Log Data" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_97">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[LogData]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Set Project Name" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_98">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[ProjectName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message-&quot;Finalize Process Ended&quot;" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Finalize Process Ended&quot;]" />
        </Sequence>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">129,345</av:Point>
          <av:Size x:Key="ShapeSize">204.666666666667,184.666666666667</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">171</x:Double>
          <x:Double x:Key="StateContainerHeight">87</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </State>
    <State x:Name="__ReferenceID14" sap2010:Annotation.AnnotationText="Reads project configuration file.&#xA;Intialize all the global variables.&#xA;Checks whether required files and queues exists.&#xA;&#xA;PreCondition: N/A&#xA;PostConsition: Config file is loaded and project dependencies are checked." DisplayName="Init Config" sap:VirtualizedContainerService.HintSize="327.333333333333,190" sap2010:WorkflowViewState.IdRef="State_2">
      <State.Entry>
        <Sequence DisplayName="Init Config" sap:VirtualizedContainerService.HintSize="752.666666666667,5986" sap2010:WorkflowViewState.IdRef="Sequence_22">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="Catch Intialization Exceptions" sap:VirtualizedContainerService.HintSize="710.666666666667,5894" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <Sequence DisplayName="Init State" sap:VirtualizedContainerService.HintSize="672,5609.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence sap2010:Annotation.AnnotationText="This block has been added to trace the assets.This will pick the log path ,Project name from Orchestrator asset and  calls the Commonlog_Code and Commonlog.xaml" DisplayName="Sequence-InitState" sap:VirtualizedContainerService.HintSize="630,1618.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_60">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Job startAssign" sap:VirtualizedContainerService.HintSize="522,62" sap2010:WorkflowViewState.IdRef="Assign_99">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:DateTime">[JobStartTime]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message-&quot;Fetching value for Log Path from Orchestrator&quot;" sap:VirtualizedContainerService.HintSize="522,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Fetching value for Log Path from Orchestrator&quot;]" />
                  <ui:GetRobotAsset TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Fetches the log path from the orchestrator." AssetName="logfile" DisplayName="Get LogFile Path from Asset" sap:VirtualizedContainerService.HintSize="522,22" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                    <ui:GetRobotAsset.Value>
                      <OutArgument x:TypeArguments="x:String">[LogPath]</OutArgument>
                    </ui:GetRobotAsset.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:GetRobotAsset>
                  <ui:LogMessage DisplayName="Log Message-&quot;Value for Log Path fetched successfully from Orchestrator &quot;" sap:VirtualizedContainerService.HintSize="522,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Value for Log Path fetched successfully from Orchestrator &quot;]" />
                  <ui:LogMessage DisplayName="Log Message-&quot;Fetching value for Project Name from Orchestrator&quot;" sap:VirtualizedContainerService.HintSize="522,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Fetching value for Project Name from Orchestrator&quot;]" />
                  <ui:GetRobotAsset TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Fetches the log path from the orchestrator." AssetName="ProjectName" DisplayName="Get ProjectName from Asset" sap:VirtualizedContainerService.HintSize="522,22" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
                    <ui:GetRobotAsset.Value>
                      <OutArgument x:TypeArguments="x:String">[ProjectName]</OutArgument>
                    </ui:GetRobotAsset.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:GetRobotAsset>
                  <ui:LogMessage DisplayName="Log Message-ValueForProjectName" sap:VirtualizedContainerService.HintSize="522,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Value for ProjectName fetched successfully from Orchestrator &quot;]" />
                  <ui:PathExists DisplayName="Path Exists-File" Exists="[FileExists]" sap:VirtualizedContainerService.HintSize="522,90.6666666666667" sap2010:WorkflowViewState.IdRef="PathExists_4" Path="[LogPath.Substring(0,LogPath.LastIndexOf(&quot;\&quot;)+1).ToString+ProjectName+&quot;.json&quot;]" PathType="File" />
                  <If Condition="[FileExists = false]" DisplayName="If FileExists = false" sap:VirtualizedContainerService.HintSize="522,402.666666666667" sap2010:WorkflowViewState.IdRef="If_30">
                    <If.Then>
                      <Sequence DisplayName="Sequence FileExists = false" sap:VirtualizedContainerService.HintSize="376,248.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_59">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message-Error" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Error" Message="[&quot;Exception occured while reading Business Log.Invalid Path&quot;]" />
                        <Throw DisplayName="Throw FileNotFound Exception in InitConfig State" Exception="[new IOException(&quot;The Business Log File does not exists.&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_11" />
                      </Sequence>
                    </If.Then>
                  </If>
                  <Assign DisplayName="Assign LogData" sap:VirtualizedContainerService.HintSize="522,62" sap2010:WorkflowViewState.IdRef="Assign_86">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[LogData]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[nothing]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-0" sap:VirtualizedContainerService.HintSize="522,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_94" UnSafe="False" WorkflowFileName="[LogPath]">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-0</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                      <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[LogPath.Substring(0,LogPath.LastIndexOf("\")+1).ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                      <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-1" sap:VirtualizedContainerService.HintSize="630,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_95" UnSafe="False" WorkflowFileName="[LogPath]">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-1</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                    <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[LogPath]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings" sap:VirtualizedContainerService.HintSize="630,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_62" UnSafe="False" WorkflowFileName="Init Config\InitAllSettings.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">
                      <Literal x:TypeArguments="x:String">Data\Config.json</Literal>
                    </InArgument>
                    <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">
                      <mva:VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="s:Exception" x:Key="out_SystemError">
                      <mva:VisualBasicReference x:TypeArguments="s:Exception" ExpressionText="SystemError" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="ui:BusinessRuleException" x:Key="out_BusinessRuleException">
                      <mva:VisualBasicReference x:TypeArguments="ui:BusinessRuleException" ExpressionText="BusinessRuleException" />
                    </OutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_JSON_Path">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="LogPath" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ProjectName">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="ProjectName" />
                    </InArgument>
                    <InOutArgument x:TypeArguments="x:String" x:Key="io_CommonLogData">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="LogData" />
                    </InOutArgument>
                    <InOutArgument x:TypeArguments="x:Boolean" x:Key="io_QueueItem" />
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <If Condition="[SystemError IsNot Nothing or BusinessRuleException IsNot Nothing]" DisplayName="Check If Error Occured" sap:VirtualizedContainerService.HintSize="630,368" sap2010:WorkflowViewState.IdRef="If_26">
                  <If.Then>
                    <If Condition="[SystemError is Nothing]" DisplayName="Check Business Error or SystemError" sap:VirtualizedContainerService.HintSize="484,214" sap2010:WorkflowViewState.IdRef="If_27">
                      <If.Then>
                        <Throw DisplayName="Throw BusinessRuleException for InitAllSettings" Exception="[BusinessRuleException]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_10" />
                      </If.Then>
                      <If.Else>
                        <Throw DisplayName="Throw SystemError for InitAllSettings" Exception="[SystemError]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_8" />
                      </If.Else>
                    </If>
                  </If.Then>
                </If>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1009" sap:VirtualizedContainerService.HintSize="630,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_96" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="logCode">1009</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                    <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1009-1" sap:VirtualizedContainerService.HintSize="630,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_97" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="logCode">1009-1</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">Initalising the value for AppInstance</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <Sequence DisplayName="Sequence -Log" sap:VirtualizedContainerService.HintSize="630,2184" sap2010:WorkflowViewState.IdRef="Sequence_61">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1009-1" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_98" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="logCode">1009-1</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">Initalising the value for AppInstance</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                      <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign DisplayName="Assign-AppInstance" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_87">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(x:Object)">[AppInstance]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(x:Object)">[new list(of Object)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1009-2" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_99" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="logCode">1009-2</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">New List(of Object)</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                      <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1009-1" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_100" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="logCode">1009-1</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">Initalising the value for SystemError</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                      <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign DisplayName="Initialize SystemError" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_88">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1009-2" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_101" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="logCode">1009-2</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">Value set to nothing</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                      <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1009-1" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_102" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="logCode">1009-1</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">Initalising the value for BusinessRuleException</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                      <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign DisplayName="Initialize BusinessRuleException" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_89">
                    <Assign.To>
                      <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1009-2" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_103" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="logCode">1009-2</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">Value set to nothing</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                      <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1009-1" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_104" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="logCode">1009-1</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">Initalising the value for FirstRun</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                      <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign DisplayName="Initialize FirstRun" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_90">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[FirstRun]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1009-2" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_105" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="logCode">1009-2</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">Value set to nothing</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                      <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1009-1" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_106" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="logCode">1009-1</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">Initalising the value for QueueExists</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                      <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign DisplayName="Initialize QueueExists" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_91">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[QueueExists]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1009-2" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_107" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="logCode">1009-2</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">Value set to False</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                      <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1009-1" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_108" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="logCode">1009-1</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">Initalising the value for FileExists</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                      <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign DisplayName="Initialize File Exists" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_92">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[FileExists]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1009-2" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_109" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="logCode">1009-2</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">Value set to False</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                      <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1010" sap:VirtualizedContainerService.HintSize="630,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_110" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="logCode">1010</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                    <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1013" sap:VirtualizedContainerService.HintSize="630,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_111" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="logCode">1013</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                    <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1014" sap:VirtualizedContainerService.HintSize="630,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_118" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="logCode">1014</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                    <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString.Replace("CommonLogg.xaml","")]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1008" sap:VirtualizedContainerService.HintSize="630,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_119" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="logCode">1008</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                    <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString.Replace("CommonLogg.xaml","")]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-17" sap:VirtualizedContainerService.HintSize="630,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_120" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-17</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                    <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString.Replace("CommonLogg.xaml","")]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1010-4" sap:VirtualizedContainerService.HintSize="630,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_121" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="logCode">1010-4</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                    <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                    <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="676.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Sequence-BusinessRuleExcpetion" sap:VirtualizedContainerService.HintSize="376,281.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_68">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1010-23" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_122" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="logCode">1010-23</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign Exception to BusinessRuleException" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                      <Assign.To>
                        <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </Catch>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="676.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Sequence-InitConfig" sap:VirtualizedContainerService.HintSize="376,281.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_69">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1010-23" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_123" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="logCode">1010-23</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign Exception to SystemError" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </Catch>
              <Catch x:TypeArguments="si:IOException" sap:VirtualizedContainerService.HintSize="676.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_20">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="si:IOException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="si:IOException" Name="exception" />
                  </ActivityAction.Argument>
                  <Assign DisplayName="Assign Exception to IOException" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_57">
                    <Assign.To>
                      <OutArgument x:TypeArguments="si:IOException">[IOException]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="si:IOException">[exception]</InArgument>
                    </Assign.Value>
                  </Assign>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">133,8.5</av:Point>
          <av:Size x:Key="ShapeSize">327.333333333333,190</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">293</x:Double>
          <x:Double x:Key="StateContainerHeight">25</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="Success" sap:VirtualizedContainerService.HintSize="554,505" sap2010:WorkflowViewState.IdRef="Transition_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Int32 x:Key="SrcConnectionPointIndex">32</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">21</x:Int32>
              <av:PointCollection x:Key="ConnectorLocation">460.333333333333,94 490.333333333333,94 490.333333333333,65 575.5,65</av:PointCollection>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <State x:Name="__ReferenceID8" sap2010:Annotation.AnnotationText="Initialize the applications.&#xA;Validates applications are open and running.&#xA;Login into the Target Application if required.&#xA;&#xA;PreCondition: Config file must be loaded.&#xA;PostCondition: Target Applications are up and running." DisplayName="Init Applications" sap:VirtualizedContainerService.HintSize="302,190" sap2010:WorkflowViewState.IdRef="State_5">
              <State.Entry>
                <TryCatch DisplayName="Catch Application Intialization Exceptions" sap:VirtualizedContainerService.HintSize="438.666666666667,1330.66666666667" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence DisplayName="Init Applications" sap:VirtualizedContainerService.HintSize="376,636" sap2010:WorkflowViewState.IdRef="Sequence_28">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1010-5" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_124" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="logCode">1010-5</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                          <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                          <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                          <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign DisplayName="Initialize SystemError" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_20">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign-AppInstance2" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_79">
                        <Assign.To>
                          <OutArgument x:TypeArguments="scg:List(x:Object)">[AppInstance]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="scg:List(x:Object)">[new list(of Object)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllApplications" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_61" UnSafe="False" WorkflowFileName="Init Application\InitAllApplications.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                          <InOutArgument x:TypeArguments="scg:List(x:Object)" x:Key="io_AppInstance">[AppInstance]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:String" x:Key="io_CommonLogData">[LogData]</InOutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ProjectName">[ProjectName]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1010-6" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_125" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="logCode">1010-6</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                          <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                          <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                          <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="400,351.333333333333" sap2010:WorkflowViewState.IdRef="Catch`1_21">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Sequence-CatchApplication" sap:VirtualizedContainerService.HintSize="376,280.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_70">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1010-20" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_126" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="logCode">1001-20</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Exception Details :- " + exception.ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                              <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                              <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <Assign DisplayName="Assign Exception to BusinessRuleException" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_80">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,22" sap2010:WorkflowViewState.IdRef="Catch`1_22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Sequence-BusinessRuleException" sap:VirtualizedContainerService.HintSize="376,281.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_71">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1010-20" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_127" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="logCode">1001-20</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Exception Details :- " + exception.ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                              <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                              <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <Assign DisplayName="Assign Exception to SystemError" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_81">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">575.5,8</av:Point>
                  <av:Size x:Key="ShapeSize">302,190</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">268</x:Double>
                  <x:Double x:Key="StateContainerHeight">25</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="First Run" sap:VirtualizedContainerService.HintSize="513,505" sap2010:WorkflowViewState.IdRef="Transition_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">877.5,84 907.5,84 907.5,91.8333333333333 1102,91.8333333333333</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">28</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">29</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <State x:Name="__ReferenceID11" sap2010:Annotation.AnnotationText="Adds the data items to the queue. If SecurityEnabled is set true will encrypt the specified columns of the inventory and then add them to the queue.&#xA;&#xA;PreCondition: Project Dependency should have been met.&#xA;PostCondition: Data is added to the Orchestrator Queue." DisplayName="Set Data" sap:VirtualizedContainerService.HintSize="841.333333333333,2299.33333333333" sap2010:WorkflowViewState.IdRef="State_6">
                      <State.Entry>
                        <TryCatch DisplayName="Catch Set Data Exceptions" sap:VirtualizedContainerService.HintSize="794.666666666667,1822" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence DisplayName="Set Transaction Data" sap:VirtualizedContainerService.HintSize="756,1129.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_30">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1035-1" sap:VirtualizedContainerService.HintSize="714,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_130" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="logCode">1035-1</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                                  <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                  <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                  <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <Assign DisplayName="Initialize SystemError" sap:VirtualizedContainerService.HintSize="714,62" sap2010:WorkflowViewState.IdRef="Assign_94">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="714,291.333333333333" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="[New TimeSpan(0,0,0,0,Convert.ToInt32(Config(&quot;TimeoutShort&quot;).ToString))]">
                                <ui:RetryScope.ActivityBody>
                                  <ActivityAction>
                                    <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_83">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GetQueueItems_1" QueueItemStates="New" QueueName="[Config(&quot;ProjectQueueName&quot;).ToString]" Result="[queueItems]" TimeoutMS="[cint(Config(&quot;RE_Timeout&quot;))]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:RetryScope.ActivityBody>
                                <ui:RetryScope.Condition>
                                  <ActivityFunc x:TypeArguments="x:Boolean" />
                                </ui:RetryScope.Condition>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:RetryScope>
                              <If Condition="[QueueItems.Count&gt; 0]" DisplayName="If Queue has new items " sap:VirtualizedContainerService.HintSize="714,248.666666666667" sap2010:WorkflowViewState.IdRef="If_31">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;There are new  Items available in the queue. Hence, skipping the claim locking process.&quot;]" />
                                </If.Then>
                                <If.Else>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SetData" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_131" UnSafe="False" WorkflowFileName="Set Data\SetData.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                                        <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                                      </InArgument>
                                      <OutArgument x:TypeArguments="s:Exception" x:Key="out_SystemError">
                                        <mva:VisualBasicReference x:TypeArguments="s:Exception" ExpressionText="SystemError" />
                                      </OutArgument>
                                      <InOutArgument x:TypeArguments="x:String" x:Key="io_CommonLogData">
                                        <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="LogData" />
                                      </InOutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProjectName">
                                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="ProjectName" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_StartTime">
                                        <mva:VisualBasicValue x:TypeArguments="s:DateTime" ExpressionText="JobStartTime" />
                                      </InArgument>
                                      <InOutArgument x:TypeArguments="scg:List(x:Object)" x:Key="io_AppInstance" />
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </If.Else>
                              </If>
                              <Assign DisplayName="Change FirstRun to False" sap:VirtualizedContainerService.HintSize="714,62" sap2010:WorkflowViewState.IdRef="Assign_95">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[FirstRun]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1035-10" sap:VirtualizedContainerService.HintSize="714,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_132" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="logCode">1035-10</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                                  <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                  <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                  <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="760.666666666667,349.333333333333" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Sequence-SetDataBusinessRuleException" sap:VirtualizedContainerService.HintSize="376,278.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1035-15" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_133" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="logCode">1035-15</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Exception occured in Set Data.Exception " + exception.ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                      <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <Assign DisplayName="Assign Exception to BusinessRuleException" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_15">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Sequence-SetData BusinessRuleException2" sap:VirtualizedContainerService.HintSize="376,281" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1035-15" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_134" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="logCode">1035-15</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Exception occured in Set Data.Exception " + exception.ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                      <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <Assign DisplayName="Assign Exception to SystemError" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">1102,2.5</av:Point>
                          <av:Size x:Key="ShapeSize">293.333333333333,223.333333333333</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Double x:Key="StateContainerWidth">259.20000000000005</x:Double>
                          <x:Double x:Key="StateContainerHeight">25</x:Double>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <State.Transitions>
                        <Transition DisplayName="Error" sap:VirtualizedContainerService.HintSize="438,505" sap2010:WorkflowViewState.IdRef="Transition_11">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">1102,147.666666666667 1003.2,147.666666666667 1003.2,342.5</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">49</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">70</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <State x:Name="__ReferenceID10" sap2010:Annotation.AnnotationText="Checks the type of exception which has occured and performs logging of the same accordingly.&#xA;&#xA;PreCondition: N/A&#xA;PostCondition: Kill the processes or Finalise" DisplayName="Exception Handling" sap:VirtualizedContainerService.HintSize="308,188.666666666667" sap2010:WorkflowViewState.IdRef="State_11">
                              <State.Entry>
                                <Flowchart DisplayName="Check Type of Exception" sap:VirtualizedContainerService.HintSize="944,792" sap2010:WorkflowViewState.IdRef="Flowchart_2">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <av:Point x:Key="ShapeLocation">320,2.5</av:Point>
                                      <av:Size x:Key="ShapeSize">60,75.2</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">350,77.5 350,107.5 341,107.5 341,156.5</av:PointCollection>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Double x:Key="Width">910</x:Double>
                                      <x:Double x:Key="Height">755.19999999999993</x:Double>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Flowchart.StartNode>
                                    <x:Reference>__ReferenceID7</x:Reference>
                                  </Flowchart.StartNode>
                                  <FlowDecision x:Name="__ReferenceID1" Condition="[BusinessRuleException IsNot Nothing]" DisplayName="IOException or BusinessException" sap:VirtualizedContainerService.HintSize="160,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <av:Point x:Key="ShapeLocation">590,396.4</av:Point>
                                        <av:Size x:Key="ShapeSize">160,87.2</av:Size>
                                        <av:PointCollection x:Key="TrueConnector">590,439.9 570,439.9 570,534.5 690,534.5 690,590 660,590</av:PointCollection>
                                        <av:PointCollection x:Key="FalseConnector">750,440 800,440 800,523.6</av:PointCollection>
                                        <x:String x:Key="TrueLabel">BusinessException</x:String>
                                        <x:String x:Key="FalseLabel">IOException</x:String>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <FlowDecision.True>
                                      <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_23">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <av:Point x:Key="ShapeLocation">460,564.5</av:Point>
                                            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1003" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_129" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="logCode">1003</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">[BusinessRuleException.ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                            <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                            <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </FlowStep>
                                    </FlowDecision.True>
                                    <FlowDecision.False>
                                      <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_7">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <av:Point x:Key="ShapeLocation">700,523.6</av:Point>
                                            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log File Not Found" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[&quot;The process has terminated early due to an Error. &quot; + Environment.NewLine + &quot;Exception : &quot; +  IOException.Message + Environment.NewLine + &quot;Exception HResult Code : &quot; + IOException.HResult.ToString]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:LogMessage>
                                      </FlowStep>
                                    </FlowDecision.False>
                                  </FlowDecision>
                                  <x:Reference>__ReferenceID0</x:Reference>
                                  <FlowDecision x:Name="__ReferenceID7" Condition="[SystemError IsNot Nothing and BusinessRuleException is Nothing and IOException is Nothing]" DisplayName="SystemException or Other" sap:VirtualizedContainerService.HintSize="142.4,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <av:Point x:Key="ShapeLocation">270,156.5</av:Point>
                                        <av:Size x:Key="ShapeSize">142.4,87.2</av:Size>
                                        <av:PointCollection x:Key="FalseConnector">412.4,200.1 670,200.1 670,396.4</av:PointCollection>
                                        <av:PointCollection x:Key="TrueConnector">270,200.1 170,200.1 170,246.4</av:PointCollection>
                                        <x:String x:Key="TrueLabel">SystemException</x:String>
                                        <x:String x:Key="FalseLabel">Other</x:String>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <FlowDecision.True>
                                      <FlowDecision x:Name="__ReferenceID2" Condition="[SystemError.Message.Contains(&quot;Orchestrator information is not available.&quot;)]" sap:VirtualizedContainerService.HintSize="70.4,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <av:Point x:Key="ShapeLocation">134.8,246.4</av:Point>
                                            <av:Size x:Key="ShapeSize">70.4,87.2</av:Size>
                                            <av:PointCollection x:Key="FalseConnector">204.8,289.9 310,289.9 310,454.5</av:PointCollection>
                                            <x:String x:Key="FalseLabel">Orchestrator Connected</x:String>
                                            <av:PointCollection x:Key="TrueConnector">134.8,290 100,290 100,403.6</av:PointCollection>
                                            <x:String x:Key="TrueLabel">Orchestrator Not Connected</x:String>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <FlowDecision.True>
                                          <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_12">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <av:Point x:Key="ShapeLocation">0,403.6</av:Point>
                                                <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:LogMessage DisplayName="Log File Not Found" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;The process has terminated early due to an Error. &quot; + Environment.NewLine + &quot;Exception : &quot; +  SystemError.Message + Environment.NewLine + &quot;Exception HResult Code : &quot; + SystemError.HResult.ToString]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:LogMessage>
                                          </FlowStep>
                                        </FlowDecision.True>
                                        <FlowDecision.False>
                                          <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_22">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <av:Point x:Key="ShapeLocation">210,454.5</av:Point>
                                                <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                                                <av:PointCollection x:Key="ConnectorLocation">310,507.3 310,537.3 319.6,537.3 319.6,579.6</av:PointCollection>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1002" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_128" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="logCode">1002</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" xml:space="preserve">["Exception : " + SystemError.ToString + Environment.NewLine +  "Exception HResult Code : " + SystemError.HResult.ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                                <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                                <InArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                            <FlowStep.Next>
                                              <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_21">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <av:Point x:Key="ShapeLocation">188.4,579.6</av:Point>
                                                    <av:Size x:Key="ShapeSize">262.4,60</av:Size>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Assign-SystemError" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_78">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                                  </Assign.Value>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Assign>
                                              </FlowStep>
                                            </FlowStep.Next>
                                          </FlowStep>
                                        </FlowDecision.False>
                                      </FlowDecision>
                                    </FlowDecision.True>
                                    <FlowDecision.False>
                                      <x:Reference>__ReferenceID1</x:Reference>
                                    </FlowDecision.False>
                                  </FlowDecision>
                                  <x:Reference>__ReferenceID2</x:Reference>
                                  <x:Reference>__ReferenceID3</x:Reference>
                                  <x:Reference>__ReferenceID4</x:Reference>
                                  <x:Reference>__ReferenceID5</x:Reference>
                                  <x:Reference>__ReferenceID6</x:Reference>
                                </Flowchart>
                              </State.Entry>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">726,342.5</av:Point>
                                  <av:Size x:Key="ShapeSize">308,188.666666666667</av:Size>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Double x:Key="StateContainerWidth">274</x:Double>
                                  <x:Double x:Key="StateContainerHeight">57</x:Double>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <State.Transitions>
                                <Transition DisplayName="Log File Present" sap:VirtualizedContainerService.HintSize="430,505" sap2010:WorkflowViewState.IdRef="Transition_16">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:PointCollection x:Key="ConnectorLocation">772.2,531.166666666667 772.2,561.166666666667 503.7,561.166666666667 503.7,542.5</av:PointCollection>
                                      <x:Int32 x:Key="SrcConnectionPointIndex">11</x:Int32>
                                      <x:Int32 x:Key="DestConnectionPointIndex">27</x:Int32>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Transition.Condition>[IOException is Nothing and SystemError is Nothing]</Transition.Condition>
                                  <Transition.To>
                                    <State x:Name="__ReferenceID13" sap2010:Annotation.AnnotationText="Kill the existing process if any error occurs or no more data is left for processing." DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="242,200" sap2010:WorkflowViewState.IdRef="State_12">
                                      <State.Entry>
                                        <TryCatch DisplayName="Catch exceptions while killing process" sap:VirtualizedContainerService.HintSize="438,314" sap2010:WorkflowViewState.IdRef="TryCatch_14">
                                          <TryCatch.Try>
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_92" UnSafe="False" WorkflowFileName="Kill Process\KillAllProcesses.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                                <InArgument x:TypeArguments="s:String[]" x:Key="in_UserProcessList">[{"msedge"}]</InArgument>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="io_CommonLogData">[LogData]</InOutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_ProjectName">[ProjectName]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </TryCatch.Try>
                                          <TryCatch.Catches>
                                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_23">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ActivityAction x:TypeArguments="s:Exception">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Sequence-KillProcess" sap:VirtualizedContainerService.HintSize="376,181" sap2010:WorkflowViewState.IdRef="Sequence_82">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1221" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_152" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="logCode">1221</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" xml:space="preserve">["Exception : " + exception.ToString + Environment.NewLine +  "Exception HResult Code : " + exception.HResult.ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                                      <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                </Sequence>
                                              </ActivityAction>
                                            </Catch>
                                          </TryCatch.Catches>
                                        </TryCatch>
                                      </State.Entry>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <av:Point x:Key="ShapeLocation">419,342.5</av:Point>
                                          <av:Size x:Key="ShapeSize">242,200</av:Size>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Double x:Key="StateContainerWidth">208</x:Double>
                                          <x:Double x:Key="StateContainerHeight">102</x:Double>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <State.Transitions>
                                        <Transition DisplayName="Retry" sap:VirtualizedContainerService.HintSize="430,505" sap2010:WorkflowViewState.IdRef="Transition_18">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:PointCollection x:Key="ConnectorLocation">564.2,342.5 564.2,103 575.5,103</av:PointCollection>
                                              <x:Int32 x:Key="SrcConnectionPointIndex">46</x:Int32>
                                              <x:Int32 x:Key="DestConnectionPointIndex">37</x:Int32>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Transition.To>
                                            <x:Reference>__ReferenceID8</x:Reference>
                                          </Transition.To>
                                          <Transition.Action>
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1001-2" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_144" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="logCode">1001-2</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                                                <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                                <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                                <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Transition.Action>
                                          <Transition.Condition>[TransactionItem IsNot Nothing]</Transition.Condition>
                                        </Transition>
                                        <Transition DisplayName="No Data" sap:VirtualizedContainerService.HintSize="430,505" sap2010:WorkflowViewState.IdRef="Transition_19">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:PointCollection x:Key="ConnectorLocation">455.24,342.5 455.24,312.5 241.64,312.5 241.64,345</av:PointCollection>
                                              <x:Int32 x:Key="SrcConnectionPointIndex">10</x:Int32>
                                              <x:Int32 x:Key="DestConnectionPointIndex">42</x:Int32>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Transition.To>
                                            <x:Reference>__ReferenceID9</x:Reference>
                                          </Transition.To>
                                          <Transition.Action>
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1030" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_143" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="logCode">1030</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                                                <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                                <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                                <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Transition.Action>
                                          <Transition.Condition>[TransactionItem is Nothing]</Transition.Condition>
                                        </Transition>
                                      </State.Transitions>
                                    </State>
                                  </Transition.To>
                                </Transition>
                                <Transition DisplayName="Log File Not Present" sap:VirtualizedContainerService.HintSize="852.8,862.4" sap2010:WorkflowViewState.IdRef="Transition_20">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:PointCollection x:Key="ConnectorLocation">818.4,531.166666666667 818.4,561.166666666667 251.8,561.166666666667 251.8,529.666666666667</av:PointCollection>
                                      <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
                                      <x:Int32 x:Key="DestConnectionPointIndex">47</x:Int32>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Transition.To>
                                    <x:Reference>__ReferenceID9</x:Reference>
                                  </Transition.To>
                                  <Transition.Action>
                                    <If Condition="[IOException is Nothing]" DisplayName="If-IOException is Nothing" sap:VirtualizedContainerService.HintSize="752.8,463.2" sap2010:WorkflowViewState.IdRef="If_25">
                                      <If.Then>
                                        <Sequence DisplayName="Sequence-IOExceptionIsNotNothing" sap:VirtualizedContainerService.HintSize="375.2,313.6" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1110-51" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_139" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="logCode">1001-1</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                                              <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                              <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                              <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:LogMessage DisplayName="Log message-&quot;Finalise process started.&quot;" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Finalise process started.&quot;]" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <ui:LogMessage DisplayName="Log message-IfFalse &quot;Finalise process started.&quot;" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Finalise process started.&quot;]" />
                                      </If.Else>
                                    </If>
                                  </Transition.Action>
                                  <Transition.Condition>[IOException IsNot Nothing or SystemError IsNot Nothing]</Transition.Condition>
                                </Transition>
                              </State.Transitions>
                            </State>
                          </Transition.To>
                          <Transition.Action>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1044-1" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_148" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="logCode">1044-1</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                                <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Transition.Action>
                          <Transition.Condition>[SystemError IsNot Nothing or BusinessRuleException isNot Nothing]</Transition.Condition>
                        </Transition>
                        <Transition DisplayName="Success" sap:VirtualizedContainerService.HintSize="430,505" sap2010:WorkflowViewState.IdRef="Transition_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">1292.66666666667,225.833333333333 1292.66666666667,255.833333333333 1292.9,255.833333333333 1292.9,343.5</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">51</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">50</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.Condition>[SystemError is Nothing and BusinessRuleException is Nothing]</Transition.Condition>
                          <Transition.To>
                            <State x:Name="__ReferenceID12" sap2010:Annotation.AnnotationText="Close the instances of the open applications.&#xA;&#xA;PreCondition: Each instance should be present in the list of instances.&#xA;PostConditon: The opened instances are closed." DisplayName="Close Application" sap:VirtualizedContainerService.HintSize="286,188" sap2010:WorkflowViewState.IdRef="State_10">
                              <State.Entry>
                                <TryCatch DisplayName="Try catch CloseAllApplications" sap:VirtualizedContainerService.HintSize="437.6,510.4" sap2010:WorkflowViewState.IdRef="TryCatch_13">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch.Try>
                                    <Sequence DisplayName="Closing Sequence" sap:VirtualizedContainerService.HintSize="375.2,280.8" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Set SystemError to Nothing" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_48" UnSafe="False" WorkflowFileName="Close Application\CloseAllApplications.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InOutArgument x:TypeArguments="scg:List(x:Object)" x:Key="io_AppInstance">[AppInstance]</InOutArgument>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                          <InOutArgument x:TypeArguments="x:String" x:Key="io_CommonLogData">[LogData]</InOutArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_ProjectName">[ProjectName]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_19">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <Assign DisplayName="Set SystemError to Exception" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                              </State.Entry>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">1107,343.5</av:Point>
                                  <av:Size x:Key="ShapeSize">286,188</av:Size>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Double x:Key="StateContainerWidth">252</x:Double>
                                  <x:Double x:Key="StateContainerHeight">40</x:Double>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <State.Transitions>
                                <Transition DisplayName="Close Unsucessful" sap:VirtualizedContainerService.HintSize="430,505" sap2010:WorkflowViewState.IdRef="Transition_15">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:PointCollection x:Key="ConnectorLocation">1149.9,531.5 1149.9,561.5 849.2,561.5 849.2,531.166666666667</av:PointCollection>
                                      <x:Int32 x:Key="SrcConnectionPointIndex">11</x:Int32>
                                      <x:Int32 x:Key="DestConnectionPointIndex">31</x:Int32>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Transition.To>
                                    <x:Reference>__ReferenceID10</x:Reference>
                                  </Transition.To>
                                  <Transition.Action>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1213" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_140" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="logCode">1213</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                                        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Transition.Action>
                                  <Transition.Condition>[SystemError IsNot Nothing]</Transition.Condition>
                                </Transition>
                                <Transition DisplayName="Close Successful and On Retry" sap:VirtualizedContainerService.HintSize="430,505" sap2010:WorkflowViewState.IdRef="Transition_13">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:PointCollection x:Key="ConnectorLocation">1149.9,343.5 1149.9,313.5 817.1,313.5 817.1,198</av:PointCollection>
                                      <x:Int32 x:Key="SrcConnectionPointIndex">10</x:Int32>
                                      <x:Int32 x:Key="DestConnectionPointIndex">63</x:Int32>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Transition.To>
                                    <x:Reference>__ReferenceID8</x:Reference>
                                  </Transition.To>
                                  <Transition.Action>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1209-2" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_141" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="logCode">1209-2</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                                        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Transition.Action>
                                  <Transition.Condition>[SystemError is Nothing and TransactionItem IsNot Nothing]</Transition.Condition>
                                </Transition>
                                <Transition DisplayName="Close Successful and No Data" sap:VirtualizedContainerService.HintSize="430,505" sap2010:WorkflowViewState.IdRef="Transition_14">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:PointCollection x:Key="ConnectorLocation">1264.3,531.5 1264.3,561.5 210.866666666667,561.5 210.866666666667,529.666666666667</av:PointCollection>
                                      <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
                                      <x:Int32 x:Key="DestConnectionPointIndex">31</x:Int32>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Transition.To>
                                    <x:Reference>__ReferenceID9</x:Reference>
                                  </Transition.To>
                                  <Transition.Action>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1030" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_142" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="logCode">1030</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                                        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Transition.Action>
                                  <Transition.Condition>[SystemError is Nothing and TransactionItem is Nothing]</Transition.Condition>
                                </Transition>
                              </State.Transitions>
                            </State>
                          </Transition.To>
                        </Transition>
                      </State.Transitions>
                    </State>
                  </Transition.To>
                  <Transition.Action>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1010-14" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_135" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="logCode">1010-14</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Transition.Action>
                  <Transition.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemError is Nothing and BusinessRuleException is Nothing and FirstRun = True" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
                  </Transition.Condition>
                </Transition>
                <Transition DisplayName="Error" sap:VirtualizedContainerService.HintSize="936,950.4" sap2010:WorkflowViewState.IdRef="Transition_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">590.6,198 590.6,228 910.8,228 910.8,342.5</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">3</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">46</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID10</x:Reference>
                  </Transition.To>
                  <Transition.Action>
                    <Sequence DisplayName="Sequence SystemError IsNot Nothing or BusinessRuleException IsNot Nothing" sap:VirtualizedContainerService.HintSize="836,551.2" sap2010:WorkflowViewState.IdRef="Sequence_80">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1010-18" sap:VirtualizedContainerService.HintSize="794.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_149" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="logCode">1010-18</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                          <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                          <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                          <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <If Condition="[SystemError is Nothing]" DisplayName="Check System Error or BusinessRuleException" sap:VirtualizedContainerService.HintSize="794.4,330.4" sap2010:WorkflowViewState.IdRef="If_29">
                        <If.Then>
                          <Sequence DisplayName="Sequence Check System Error or BusinessRuleException" sap:VirtualizedContainerService.HintSize="375.2,180.8" sap2010:WorkflowViewState.IdRef="Sequence_78">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1206" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_150" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="logCode">1206</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" xml:space="preserve">["Exception : " + BusinessRuleException.ToString + Environment.NewLine +  "Exception HResult Code : " + BusinessRuleException.HResult.ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Sequence IfFalse Check System Error or BusinessRuleException" sap:VirtualizedContainerService.HintSize="375.2,180.8" sap2010:WorkflowViewState.IdRef="Sequence_79">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1206" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_151" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="logCode">1206</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" xml:space="preserve">["Exception : " + BusinessRuleException.ToString + Environment.NewLine +  "Exception HResult Code : " + BusinessRuleException.HResult.ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </Transition.Action>
                  <Transition.Condition>[SystemError IsNot Nothing or BusinessRuleException IsNot Nothing]</Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
          <Transition.Action>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1010-13" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_136" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="logCode">1010-13</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
                <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Transition.Action>
          <Transition.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemError is Nothing and BusinessRuleException is Nothing and IOException is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
          </Transition.Condition>
        </Transition>
        <Transition DisplayName="Error" sap:VirtualizedContainerService.HintSize="1457.6,1254.4" sap2010:WorkflowViewState.IdRef="Transition_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">460.333333333333,122.5 490.333333333333,122.5 490.333333333333,312.5 787.6,312.5 787.6,342.5</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">44</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">14</x:Int32>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID10</x:Reference>
          </Transition.To>
          <Transition.Action>
            <Sequence DisplayName="Sequence-SystemError isNot Nothing " sap:VirtualizedContainerService.HintSize="1357.6,855.2" sap2010:WorkflowViewState.IdRef="Sequence_77">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message- &quot;Exception occured in Init Config State.Moving to Exception handling&quot;" sap:VirtualizedContainerService.HintSize="1316,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Error" Message="[&quot;Exception occured in Init Config State.Moving to Exception handling&quot;]" />
              <If Condition="[IOException is Nothing]" DisplayName="If-SystemError isNot Nothing or BusinessRuleException IsNot Nothing or IOException IsNot Nothing" sap:VirtualizedContainerService.HintSize="1316,629.6" sap2010:WorkflowViewState.IdRef="If_18">
                <If.Then>
                  <If Condition="[SystemError is Nothing]" DisplayName="If- IfTrue SystemError isNot Nothing or BusinessRuleException IsNot Nothing or IOException IsNot Nothing" sap:VirtualizedContainerService.HintSize="1172,480" sap2010:WorkflowViewState.IdRef="If_23">
                    <If.Then>
                      <Sequence DisplayName="Sequence- IfTrue SystemError is Nothing" sap:VirtualizedContainerService.HintSize="375.2,180.8" sap2010:WorkflowViewState.IdRef="Sequence_75">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1203" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_145" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="logCode">1203</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">[BusinessRuleException.ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString.Replace("CommonLogg.xaml","")]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                            <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                            <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <If Condition="[SystemError.Message.Contains(&quot;Orchestrator information is not available.&quot;)]" DisplayName="If- SystemError.Message.Contains(&quot;Orchestrator information is not available.&quot;)" sap:VirtualizedContainerService.HintSize="752.8,330.4" sap2010:WorkflowViewState.IdRef="If_24">
                        <If.Then>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1010-16" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_146" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="logCode">1010-16</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Exception HResult Code : " + SystemError.HResult.ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                              <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                              <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Sequence- ifFalse SystemError.Message.Contains(&quot;Orchestrator information is not available.&quot;)" sap:VirtualizedContainerService.HintSize="375.2,180.8" sap2010:WorkflowViewState.IdRef="Sequence_76">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1203" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_147" UnSafe="False" WorkflowFileName="[Config(&quot;LogFile&quot;).ToString]">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="logCode">1203</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">[BusinessRuleException.ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[Config("LogFile").ToString.Replace("CommonLogg.xaml","")]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[LogData]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[ProjectName]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </If.Else>
                      </If>
                    </If.Else>
                  </If>
                </If.Then>
              </If>
            </Sequence>
          </Transition.Action>
          <Transition.Condition>[SystemError isNot Nothing or BusinessRuleException IsNot Nothing or IOException IsNot Nothing]</Transition.Condition>
        </Transition>
      </State.Transitions>
      <State.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="QueueExists" />
        <Variable x:TypeArguments="x:Boolean" Name="FileExists" />
      </State.Variables>
    </State>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID11</x:Reference>
    <x:Reference>__ReferenceID12</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <x:Reference>__ReferenceID13</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="ui:QueueItem" Name="TransactionItem" />
      <Variable x:TypeArguments="s:Exception" Name="SystemError" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Name="BusinessRuleException" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="TransactionNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="RetryNumber" />
      <Variable x:TypeArguments="x:String" Name="TransactionField1" />
      <Variable x:TypeArguments="x:String" Name="TransactionID" />
      <Variable x:TypeArguments="x:String" Name="OutputJSON" />
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="FirstRun" />
      <Variable x:TypeArguments="si:IOException" Name="IOException" />
      <Variable x:TypeArguments="scg:List(x:Object)" Default="[new List(of Object)]" Name="AppInstance" />
      <Variable x:TypeArguments="x:String" Name="ProjectName" />
      <Variable x:TypeArguments="x:String" Name="LogPath" />
      <Variable x:TypeArguments="x:String" Name="LogData" />
      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="QueueItems" />
      <Variable x:TypeArguments="s:DateTime" Name="JobStartTime" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>