<Activity mc:Ignorable="sap sap2010" x:Class="TakeScreenshot" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Folder" Type="InArgument(x:String)" />
    <x:Property Name="io_FilePath" Type="InOutArgument(x:String)" />
    <x:Property Name="in_LogFile" Type="InArgument(x:String)" />
    <x:Property Name="in_TransactionIdentifier" Type="InArgument(x:String)" />
    <x:Property Name="io_CommonLogData" Type="InOutArgument(x:String)" />
    <x:Property Name="in_ProjectName" Type="InArgument(x:String)" />
    <x:Property Name="in_TransactionStatus" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>756.8,1650.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>TakeScreenshot_2</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Usage: Set in_Folder to the folder Name where you want to save the screenshot. Alternatively, supply the full path including filename in io_FilePath. Description: This workflow captures a screenshot and logs it's name and location. It then saves it. If io_FilePath is empty, it will try to save the picture in in_Folder.  It uses .png extension." DisplayName="Screenshot sequence" sap:VirtualizedContainerService.HintSize="736.8,1590.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:Image" Name="Screenshot" />
      <Variable x:TypeArguments="si:FileInfo" Name="ScreenshotFileInfo" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1209-3" sap:VirtualizedContainerService.HintSize="695.2,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="[in_LogFile]">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="logCode">1209-3</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">Taking ScreenShot</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_LogFile]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier">[in_TransactionIdentifier]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus">[in_TransactionStatus]</InArgument>
        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:TakeScreenshot WaitBefore="{x:Null}" DisplayName="Take screenshot" sap:VirtualizedContainerService.HintSize="695.2,68.8" sap2010:WorkflowViewState.IdRef="TakeScreenshot_1" Screenshot="[Screenshot]">
      <ui:TakeScreenshot.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
      </ui:TakeScreenshot.Target>
    </ui:TakeScreenshot>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1209-4" sap:VirtualizedContainerService.HintSize="695.2,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="[in_LogFile]">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="logCode">1209-4</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">ScreenShot taken Successfully</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_LogFile]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier">[in_TransactionIdentifier]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus">[in_TransactionStatus]</InArgument>
        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <If Condition="[String.IsNullOrEmpty(io_filePath)]" DisplayName="If no file path" sap:VirtualizedContainerService.HintSize="695.2,462.4" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Sequence DisplayName="Sequence-IfNoFilePath" sap:VirtualizedContainerService.HintSize="336.8,312.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1209-5" sap:VirtualizedContainerService.HintSize="314.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="[in_LogFile]">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="logCode">1209-5</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
              <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_LogFile]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier">[in_TransactionIdentifier]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus">[in_TransactionStatus]</InArgument>
              <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Assign DisplayName="Make file path" sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[io_FilePath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Path.Combine(in_Folder, "ExceptionScreenshot_"+Now.ToString("yyMMdd.hhmmss")+".png")]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1209-6" sap:VirtualizedContainerService.HintSize="314.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="[in_LogFile]">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="logCode">1209-6</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
            <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_LogFile]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier">[in_TransactionIdentifier]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus">[in_TransactionStatus]</InArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Else>
    </If>
    <Assign DisplayName="Create fileInfo with Path" sap:VirtualizedContainerService.HintSize="676,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="si:FileInfo">[ScreenshotFileInfo]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="si:FileInfo">[new fileinfo(io_FilePath)]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[Directory.Exists(ScreenshotFileInfo.DirectoryName)]" DisplayName="If directory does not exist, create it" sap:VirtualizedContainerService.HintSize="676,209.6" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Else>
        <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create directory-IfDirDoesNotExist" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[ScreenshotFileInfo.DirectoryName]" />
      </If.Else>
    </If>
    <ui:SaveImage DisplayName="Save screenshotToFIlePath" FileName="[io_FilePath]" sap:VirtualizedContainerService.HintSize="676,92.8" sap2010:WorkflowViewState.IdRef="SaveImage_1" Image="[Screenshot]" />
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1006" sap:VirtualizedContainerService.HintSize="676,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="[in_LogFile]">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="logCode">1006</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Screenshot saved at: "+io_FilePath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_LogFile]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier">[in_TransactionIdentifier]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus">[in_TransactionStatus]</InArgument>
        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>