<Activity mc:Ignorable="sap sap2010" x:Class="InitiAllSettings" this:InitiAllSettings.in_ConfigFile="Data\Config.json" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ConfigFile" Type="InArgument(x:String)" />
    <x:Property Name="out_Config" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_SystemError" Type="OutArgument(s:Exception)" />
    <x:Property Name="out_BusinessRuleException" Type="OutArgument(ui:BusinessRuleException)" />
    <x:Property Name="in_JSON_Path" Type="InArgument(x:String)" />
    <x:Property Name="in_ProjectName" Type="InArgument(x:String)" />
    <x:Property Name="io_CommonLogData" Type="InOutArgument(x:String)" />
    <x:Property Name="io_QueueItem" Type="InOutArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>637.333333333333,1878.66666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetAllSettings_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow outputs a settings Dictionary with key/value pairs to be used in the project. Settings are read from local config file then fetched from Orchestrator assets. &#xA;Assets will overwrite the config file settings" DisplayName="Get All Settings-JsonPath" sap:VirtualizedContainerService.HintSize="617.333333333333,1818.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="RawString" />
      <Variable x:TypeArguments="njl:JArray" Name="JArray" />
      <Variable x:TypeArguments="ui:GenericValue" Name="AssetValue" />
      <Variable x:TypeArguments="x:String" Name="BusinessExceptionMessage" />
      <Variable x:TypeArguments="x:String" Name="SystemErrorMessage" />
      <Variable x:TypeArguments="x:Boolean" Name="AssetFlag" />
      <Variable x:TypeArguments="x:String" Name="UserName" />
      <Variable x:TypeArguments="ss:SecureString" Name="Password" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-2" sap:VirtualizedContainerService.HintSize="575.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="[in_JSON_Path]">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-2</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_JSON_Path]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign DisplayName="Assign-BusinessException" sap:VirtualizedContainerService.HintSize="575.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_46">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[BusinessExceptionMessage]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign-SystemError" sap:VirtualizedContainerService.HintSize="575.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_47">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[SystemErrorMessage]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Create OutConfig Dictionary" sap:VirtualizedContainerService.HintSize="575.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[out_Config]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(of String, object)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-3" sap:VirtualizedContainerService.HintSize="575.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="[in_JSON_Path]">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-3</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Path for JSON is " + in_JSON_Path.ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_JSON_Path]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:ReadTextFile Content="[RawString]" DisplayName="Read Config Json file to Raw String" FileName="[in_ConfigFile]" sap:VirtualizedContainerService.HintSize="575.333333333333,58.6666666666667" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-4" sap:VirtualizedContainerService.HintSize="575.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="[in_JSON_Path]">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-4</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_JSON_Path]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:DeserializeJsonArray DisplayName="Deserialize JSON-RawString" sap:VirtualizedContainerService.HintSize="575.333333333333,62" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_2" JsonArray="[JArray]" JsonString="[RawString]" />
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-5" sap:VirtualizedContainerService.HintSize="575.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" UnSafe="False" WorkflowFileName="[in_JSON_Path]">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-5</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_JSON_Path]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:ForEach x:TypeArguments="njl:JToken" CurrentIndex="{x:Null}" DisplayName="For Each Item in Config File" sap:VirtualizedContainerService.HintSize="575.333333333333,524.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[JArray]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="njl:JToken">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="njl:JToken" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Sequence-CyberArk" sap:VirtualizedContainerService.HintSize="538.666666666667,386" sap2010:WorkflowViewState.IdRef="Sequence_58">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign-AssetFlag" sap:VirtualizedContainerService.HintSize="496.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_106">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[AssetFlag]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <Switch x:TypeArguments="x:String" DisplayName="Switch-Item" Expression="[item.Item(&quot;Type&quot;).ToString]" sap:VirtualizedContainerService.HintSize="496.666666666667,192" sap2010:WorkflowViewState.IdRef="Switch`1_5">
              <TryCatch x:Key="Asset" DisplayName="Catch Asset Value Exceptions" sap:VirtualizedContainerService.HintSize="1576.66666666667,1082.66666666667" sap2010:WorkflowViewState.IdRef="TryCatch_22">
                <TryCatch.Try>
                  <Sequence DisplayName="Get Asset Value JsonPath" sap:VirtualizedContainerService.HintSize="388.666666666667,844" sap2010:WorkflowViewState.IdRef="Sequence_125">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-6" sap:VirtualizedContainerService.HintSize="346.666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_80" UnSafe="False" WorkflowFileName="[in_JSON_Path]">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-6</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Fetching value for" +Item.Item("Name").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_JSON_Path]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:RetryScope DisplayName="Retry Scope-GetAssetValue" sap:VirtualizedContainerService.HintSize="346.666666666667,397.333333333333" sap2010:WorkflowViewState.IdRef="RetryScope_8" NumberOfRetries="3" RetryInterval="00:00:05">
                      <ui:RetryScope.ActivityBody>
                        <ActivityAction>
                          <Sequence DisplayName="Action-GetAssetValue" sap:VirtualizedContainerService.HintSize="304.666666666667,214" sap2010:WorkflowViewState.IdRef="Sequence_116">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[item.Item(&quot;Name&quot;).ToString]" DisplayName="Get Asset Value-2" sap:VirtualizedContainerService.HintSize="262.666666666667,22" sap2010:WorkflowViewState.IdRef="GetRobotAsset_13">
                              <ui:GetRobotAsset.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[AssetValue]</OutArgument>
                              </ui:GetRobotAsset.Value>
                            </ui:GetRobotAsset>
                            <Assign DisplayName="Assign-AssetFlag" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_146">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[AssetFlag]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ActivityAction>
                      </ui:RetryScope.ActivityBody>
                      <ui:RetryScope.Condition>
                        <ActivityFunc x:TypeArguments="x:Boolean">
                          <p:IsTrue DisplayName="Is true-AssetValue" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="IsTrue_8" Input="[AssetFlag]" />
                        </ActivityFunc>
                      </ui:RetryScope.Condition>
                    </ui:RetryScope>
                    <Assign DisplayName="Add Asset Value in OutConfig" sap:VirtualizedContainerService.HintSize="345.6,60" sap2010:WorkflowViewState.IdRef="Assign_147">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[out_Config(item.Item("Name").ToString)]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[AssetValue]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-7-2" sap:VirtualizedContainerService.HintSize="345.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_81" UnSafe="False" WorkflowFileName="[in_JSON_Path]">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-7</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Value for " +Item.Item("Name").ToString + " is " + AssetValue.ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_JSON_Path]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1542.4,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_21">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <If Condition="[exception.Message.Contains(&quot;Could not find an asset with this name&quot;)]" DisplayName="Check Asset Exception or System Exception" sap:VirtualizedContainerService.HintSize="1536,1072" sap2010:WorkflowViewState.IdRef="If_70">
                        <If.Then>
                          <Sequence DisplayName="Sequence-JsonPath" sap:VirtualizedContainerService.HintSize="1116.8,922.4" sap2010:WorkflowViewState.IdRef="Sequence_128">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-8" sap:VirtualizedContainerService.HintSize="1075.2,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_84" UnSafe="False" WorkflowFileName="[in_JSON_Path]">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-8</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Exception occur while fetching value for " +Item.Item("Name").ToString +".Exception is" +exception.ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_JSON_Path]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <If Condition="[item.Item(&quot;Name&quot;).ToString.Equals(&quot;LogFile&quot;)]" DisplayName="If ItemNameEqualsLogFile" sap:VirtualizedContainerService.HintSize="1075.2,701.6" sap2010:WorkflowViewState.IdRef="If_69">
                              <If.Then>
                                <Throw DisplayName="Throw IOException while executing InitAllSettings" Exception="[new System.IO.IOException(&quot;Common Log Not Found&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_30" />
                              </If.Then>
                              <If.Else>
                                <If Condition="[item.Item(&quot;Name&quot;).ToString.EndsWith(&quot;Key&quot;) or item.Item(&quot;Name&quot;).ToString.Equals(&quot;SecureColumn&quot;)]" DisplayName="If ItemNameEndsWithKey" sap:VirtualizedContainerService.HintSize="831.2,552" sap2010:WorkflowViewState.IdRef="If_68">
                                  <If.Then>
                                    <If Condition="[out_Config(&quot;SecurityEnabled&quot;).ToString.Equals(&quot;True&quot;)]" DisplayName="If SecurityEnabled" sap:VirtualizedContainerService.HintSize="483.2,402.4" sap2010:WorkflowViewState.IdRef="If_67">
                                      <If.Then>
                                        <Sequence DisplayName="Sequence-UpdateBusinessErrorMessageIfTrue" sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_126">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Update Business Error Message" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_157">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[BusinessExceptionMessage]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[BusinessExceptionMessage +"Asset : " + item.Item("Name").ToString + " does not exists in Orchestrator" + Environment.NewLine]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign-Out_businessRuleExceptionIfTrue" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_158">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_BusinessRuleException]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="ui:BusinessRuleException">[new UiPath.Core.BusinessRuleException(BusinessExceptionMessage)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Sequence-UpdateBusinessErrorMessage" sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_127">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Update Business Error Message-ifFalse" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_159">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[BusinessExceptionMessage]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[BusinessExceptionMessage +"Asset : " + item.Item("Name").ToString + " does not exists in Orchestrator" + Environment.NewLine]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign-out_BusinessRuleExcepton" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_160">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_BusinessRuleException]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:BusinessRuleException">[new UiPath.Core.BusinessRuleException(BusinessExceptionMessage)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Sequence-Assign Exception" sap:VirtualizedContainerService.HintSize="375.2,380.8" sap2010:WorkflowViewState.IdRef="Sequence_129">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-8-2" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_85" UnSafe="False" WorkflowFileName="[in_JSON_Path]">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-8</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Exception occur while fetching value for " +Item.Item("Name").ToString +".Exception is" +exception.ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_JSON_Path]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <Assign DisplayName="Update System Error Message" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_161">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[SystemErrorMessage]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[SystemErrorMessage + exception.ToString + Environment.NewLine]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign SystemError" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_162">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:Exception">[out_SystemError]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:Exception">[new Exception(SystemErrorMessage)]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <TryCatch x:Key="Credential" DisplayName="Catch Credentials Exceptions" sap:VirtualizedContainerService.HintSize="1332.66666666667,1546" sap2010:WorkflowViewState.IdRef="TryCatch_23">
                <TryCatch.Try>
                  <Sequence DisplayName="Sequence-GetCredentials" sap:VirtualizedContainerService.HintSize="807.333333333333,1307.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_133">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Get Credentials" sap:VirtualizedContainerService.HintSize="765.333333333333,1087.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_132">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="PasswordString" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-10" sap:VirtualizedContainerService.HintSize="723.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_86" UnSafe="False" WorkflowFileName="[in_JSON_Path]">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-10</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Fetching Value for " + item.Item("Name").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_JSON_Path]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                          <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                          <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:RetryScope DisplayName="Retry Scope-get credential" sap:VirtualizedContainerService.HintSize="723.333333333333,398" sap2010:WorkflowViewState.IdRef="RetryScope_10" NumberOfRetries="3" RetryInterval="00:00:05">
                        <ui:RetryScope.ActivityBody>
                          <ActivityAction>
                            <Sequence DisplayName="Action-getCredential" sap:VirtualizedContainerService.HintSize="304.666666666667,214.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_130">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[item.Item(&quot;Name&quot;).ToString]" DisplayName="Get Rp Credential" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GetRobotCredential_6" Password="[Password]" Username="[UserName]" />
                              <Assign DisplayName="Assign-AssestFlag" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_163">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[AssetFlag]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ActivityAction>
                        </ui:RetryScope.ActivityBody>
                        <ui:RetryScope.Condition>
                          <ActivityFunc x:TypeArguments="x:Boolean">
                            <p:IsTrue DisplayName="Is true" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="IsTrue_10" Input="[AssetFlag]" />
                          </ActivityFunc>
                        </ui:RetryScope.Condition>
                      </ui:RetryScope>
                      <If Condition="[item.Item(&quot;Name&quot;).ToString.EndsWith(&quot;Key&quot;) and out_Config(&quot;SecurityEnabled&quot;).ToString.Equals(&quot;True&quot;)]" DisplayName="If-item.Item(&quot;Name&quot;).ToString.EndsWith(&quot;Key&quot;) and out_Config(&quot;SecurityEnabled&quot;).ToString.Equals(&quot;True&quot;)" sap:VirtualizedContainerService.HintSize="723.2,430.4" sap2010:WorkflowViewState.IdRef="If_71">
                        <If.Then>
                          <Sequence DisplayName="Sequence - Set Secure Key" sap:VirtualizedContainerService.HintSize="375.2,280.8" sap2010:WorkflowViewState.IdRef="Sequence_144">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Get Password String" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_174">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[PasswordString]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, Password).Password]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SetSecureKey workflow" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_87" UnSafe="False" WorkflowFileName="Resuable Components\SetSecureKey.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <OutArgument x:TypeArguments="x:Object" x:Key="out_Key">[out_Config(item.Item("Name").ToString)]</OutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_CredentialName">[item.Item("Name").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_JSONPath">[in_JSON_Path]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ProjectName">[in_ProjectName]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_PasswordString">[PasswordString]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_CommonLogData">[io_CommonLogData]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Sequence-ifFalse" sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_131">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Add Asset Value in OutConfig Uname" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_164">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[out_Config(item.Item("Name").ToString+"UserName")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[UserName]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Add Asset Value in OutConfig passs" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_165">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[out_Config(item.Item("Name").ToString+"Password")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[Password]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-11" sap:VirtualizedContainerService.HintSize="764.8,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_88" UnSafe="False" WorkflowFileName="[in_JSON_Path]">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-11</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Fetching value for " + item.Item("Name").ToString + "completed"]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_JSON_Path]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                        <InArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1298.4,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_22">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <If Condition="[exception.Message.Contains(&quot;Could not find an asset with this name&quot;)]" DisplayName="Check Asset Exception or System Exception" sap:VirtualizedContainerService.HintSize="1292,922.4" sap2010:WorkflowViewState.IdRef="If_74">
                        <If.Then>
                          <Sequence DisplayName="Sequence Name &amp; Key  " sap:VirtualizedContainerService.HintSize="872.8,772.8" sap2010:WorkflowViewState.IdRef="Sequence_136">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-12" sap:VirtualizedContainerService.HintSize="831.2,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_89" UnSafe="False" WorkflowFileName="[in_JSON_Path]">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-12</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Exception occured while fetching value for " + item.Item("Name").ToString+".Exception is " + exception.ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_JSON_Path]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <If Condition="[item.Item(&quot;Name&quot;).ToString.EndsWith(&quot;Key&quot;)]" DisplayName="If-item.Item(&quot;Name&quot;).ToString.EndsWith(&quot;Key&quot;)2" sap:VirtualizedContainerService.HintSize="831.2,552" sap2010:WorkflowViewState.IdRef="If_73">
                              <If.Then>
                                <If Condition="[out_Config(&quot;SecurityEnabled&quot;).ToString.Equals(&quot;True&quot;)]" DisplayName="If-out_Config(&quot;SecurityEnabled&quot;).ToString.Equals(&quot;True&quot;)" sap:VirtualizedContainerService.HintSize="483.2,402.4" sap2010:WorkflowViewState.IdRef="If_72">
                                  <If.Then>
                                    <Sequence DisplayName="Sequence- if true 2" sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_134">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="UpdateBusinessErrorMessage" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_166">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[BusinessExceptionMessage]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[BusinessExceptionMessage +"Credential : " + item.Item("Name").ToString + " does not exists in Orchestrator" + Environment.NewLine]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign-out_BusinessRuleException" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_167">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_BusinessRuleException]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:BusinessRuleException">[new UiPath.Core.BusinessRuleException(BusinessExceptionMessage)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                </If>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="Sequence if False2" sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_135">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Update Business Error Message2" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_168">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[BusinessExceptionMessage]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[BusinessExceptionMessage + "Credential : " + item.Item("Name").ToString + " does not exists in Orchestrator" + Environment.NewLine]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign-out_BusinessRuleException if false" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_169">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_BusinessRuleException]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="ui:BusinessRuleException">[new UiPath.Core.BusinessRuleException(BusinessExceptionMessage)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Sequence-SystemError" sap:VirtualizedContainerService.HintSize="375.2,380.8" sap2010:WorkflowViewState.IdRef="Sequence_137">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-12" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_90" UnSafe="False" WorkflowFileName="[in_JSON_Path]">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-12</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Exception occured while fetching value for " + item.Item("Name").ToString+".Exception is " + exception.ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_JSON_Path]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                                <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <Assign DisplayName="Update System Error Message3" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_170">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[SystemErrorMessage]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[SystemErrorMessage + exception.ToString + Environment.NewLine]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign SystemError" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_171">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:Exception">[out_SystemError]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:Exception">[new Exception(SystemErrorMessage)]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <Sequence x:Key="Constant" DisplayName="Sequence-JsonPath" sap:VirtualizedContainerService.HintSize="480.666666666667,1210.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_140">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch DisplayName="Try Catch-JsonPath" sap:VirtualizedContainerService.HintSize="434,330.666666666667" sap2010:WorkflowViewState.IdRef="TryCatch_24">
                  <TryCatch.Try>
                    <Sequence DisplayName="Sequence-Log" sap:VirtualizedContainerService.HintSize="387.2,784" sap2010:WorkflowViewState.IdRef="Sequence_139">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-13-2" sap:VirtualizedContainerService.HintSize="345.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_91" UnSafe="False" WorkflowFileName="[in_JSON_Path]">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-13</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Fetching value for "+ item.Item("Name").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_JSON_Path]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                          <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                          <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:RetryScope DisplayName="Retry Scope-Add KeyValue" sap:VirtualizedContainerService.HintSize="345.6,435.2" sap2010:WorkflowViewState.IdRef="RetryScope_11" NumberOfRetries="3" RetryInterval="00:00:05">
                        <ui:RetryScope.ActivityBody>
                          <ActivityAction>
                            <Sequence DisplayName="Action-AssetFlag" sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_138">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Add Key/Value Pair to OutConfig-2" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_172">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[out_Config(item.Item("Name").ToString.Trim)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[item.Item("DefaultValue").ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Assign-AssetFlag" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_173">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[AssetFlag]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ActivityAction>
                        </ui:RetryScope.ActivityBody>
                        <ui:RetryScope.Condition>
                          <ActivityFunc x:TypeArguments="x:Boolean">
                            <p:IsTrue DisplayName="Is true-AssetFlag" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="IsTrue_11" Input="[AssetFlag]" />
                          </ActivityFunc>
                        </ui:RetryScope.Condition>
                      </ui:RetryScope>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-14-2" sap:VirtualizedContainerService.HintSize="345.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_92" UnSafe="False" WorkflowFileName="[in_JSON_Path]">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-14</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Value for "+ item.Item("Name").ToString + " is " + item.Item("DefaultValue").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_JSON_Path]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                          <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                          <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,158.4" sap2010:WorkflowViewState.IdRef="Catch`1_23">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-15" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_93" UnSafe="False" WorkflowFileName="[in_JSON_Path]">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-15</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="ExtraLog">["Exception occure while fetching value for "+ "Fetching value for "+ item.Item("DefaultValue").ToString + ".Exception is "+ exception.ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_JSON_Path]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
                            <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
                            <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </Sequence>
            </Switch>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log 1000-16" sap:VirtualizedContainerService.HintSize="575.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_58" UnSafe="False" WorkflowFileName="[in_JSON_Path]">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="logCode">1000-16</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ExtraLog" />
        <InArgument x:TypeArguments="x:String" x:Key="JSONPath">[in_JSON_Path]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="TransactionIdentifier" />
        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus" />
        <InOutArgument x:TypeArguments="x:String" x:Key="CommonLogData">[io_CommonLogData]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[in_ProjectName]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>