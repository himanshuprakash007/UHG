<Activity mc:Ignorable="sap sap2010" x:Class="Route_OB002" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:ocm="clr-namespace:Optum.Cirrus.Model;assembly=Optum.Cirrus" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_EditCode" Type="InArgument(x:String)" />
    <x:Property Name="in_ClaimId" Type="InArgument(x:String)" />
    <x:Property Name="in_TransactionId" Type="InArgument(x:String)" />
    <x:Property Name="io_CommonLogData" Type="InOutArgument(x:String)" />
    <x:Property Name="in_ProjectName" Type="InArgument(x:String)" />
    <x:Property Name="in_ClaimObject" Type="InArgument(ocm:Claims)" />
    <x:Property Name="in_BolNoRecordFound" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2440,3632</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Route_OB002_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="60">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Optum.Cirrus.Model</x:String>
      <x:String>Optum.Cirrus.API</x:String>
      <x:String>Optum.JwtTokenConfiguration</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="76">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>Optum.Cirrus</AssemblyReference>
      <AssemblyReference>Optum.JwtTokenConfiguration</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Route_OB010" sap:VirtualizedContainerService.HintSize="2450,3527" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strRouteCode" />
      <Variable x:TypeArguments="s:Int32[]" Name="claimLineToRoute" />
      <Variable x:TypeArguments="x:Boolean" Name="IsRouteSuccess" />
      <Variable x:TypeArguments="x:String" Name="totalBilledValue" />
      <Variable x:TypeArguments="x:String" Name="RevenueArrangement" />
      <Variable x:TypeArguments="x:String" Name="strRouteMessage" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Route API Log Message" sap:VirtualizedContainerService.HintSize="1002,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Routing Started OB010, claim Id: &quot; + in_ClaimId]" />
    <If Condition="[string.IsNullOrWhiteSpace(in_ClaimObject.claimHeader.totalBilledAmt)]" DisplayName="If Bill Amount is Null or empty, throw error else Continue" sap:VirtualizedContainerService.HintSize="2408,210" sap2010:WorkflowViewState.IdRef="If_15">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Throw DisplayName="Throw SE : Unable to extract ContractClaimType" Exception="[new Exception(&quot;Route_Claims_RV017 Workflow --&gt; Unable to extract ContractClaimType&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_7" />
      </If.Then>
      <If.Else>
        <Assign DisplayName="Assign : strContractClaimType" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[totalBilledValue]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_ClaimObject.claimHeader.totalBilledAmt.ToString]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <Sequence DisplayName="Revnue Arrangement Sequence" sap:VirtualizedContainerService.HintSize="2408,703" sap2010:WorkflowViewState.IdRef="Sequence_27">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:CommentOut DisplayName="Comment_Out Api R.A" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CommentOut_1">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="549,144" sap2010:WorkflowViewState.IdRef="Sequence_26">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[string.IsNullOrWhiteSpace(in_ClaimObject.claimHeader.totalBilledAmt)]" DisplayName="If Bill Amount is Null or empty, throw error else Continue" sap:VirtualizedContainerService.HintSize="262,52" sap2010:WorkflowViewState.IdRef="If_18">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Throw DisplayName="Throw SE : Unable to extract ContractClaimType" Exception="[new Exception(&quot;Route_Claims_RV017 Workflow --&gt; Unable to extract ContractClaimType&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_8" />
              </If.Then>
              <If.Else>
                <Assign DisplayName="Assign : strContractClaimType" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[totalBilledValue]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:GenericValue">[in_ClaimObject.claimHeader.totalBilledAmt]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
      <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Edge" DisplayName="Attach Browser 'msedge.exe Institutional'" sap:VirtualizedContainerService.HintSize="434,519" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="51f987e23c3584c4588e087e4a96d182" Selector="&lt;html app='msedge.exe' title='*Optum Cirrus' /&gt;">
        <ui:BrowserScope.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,373" sap2010:WorkflowViewState.IdRef="Sequence_28">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DisplayName="Click 'Claim Header'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="bcc0e91c-cc4a-46e6-a46e-2be2cd0f586e" InformativeScreenshot="e880a212b66e629609d6afc406c73e5d" Selector="&lt;html app='msedge.exe' title='*Optum Cirrus' /&gt;&lt;webctrl aaname='Claim Header' parentid='tabDiv_0' tag='SPAN' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
              </ui:Click>
              <ui:InjectJsScript InputParameter="{x:Null}" DisplayName="Inject Js Script for Find &quot;Revenue Arrangement&quot;" sap:VirtualizedContainerService.HintSize="334,135" sap2010:WorkflowViewState.IdRef="InjectJsScript_1" ScriptCode="[&quot;function(){&quot;+vbCr+&#xA;&quot;     var x = document.evaluate(&quot;&quot;//td[.//span[text()='Revenue Arrangement:']]/following-sibling::td[1]&quot;&quot;,document,null,9,null).singleNodeValue&quot;+vbCr+&#xA;&quot;        if(typeof(x) != 'undefined' &amp;&amp; x != null){&quot;+vbCr+&#xA;&quot;        return x.innerText }&quot;+vbCr+&#xA;&quot;        else{&quot;+vbCr+&#xA;&quot;        return null }&quot;+vbCr+&#xA;&quot;        }&quot;]">
                <ui:InjectJsScript.ScriptOutput>
                  <OutArgument x:TypeArguments="x:String">[RevenueArrangement]</OutArgument>
                </ui:InjectJsScript.ScriptOutput>
                <ui:InjectJsScript.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="29caecbb-ed25-4512-9a92-dd4acaacd57d">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:InjectJsScript.Target>
              </ui:InjectJsScript>
            </Sequence>
          </ActivityAction>
        </ui:BrowserScope.Body>
      </ui:BrowserScope>
    </Sequence>
    <If Condition="[in_BolNoRecordFound = False]" DisplayName="If Note not found" sap:VirtualizedContainerService.HintSize="2408,1514" sap2010:WorkflowViewState.IdRef="If_17">
      <If.Then>
        <Sequence DisplayName="Sequence Route" sap:VirtualizedContainerService.HintSize="1710,1364" sap2010:WorkflowViewState.IdRef="Sequence_25">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If sap2010:Annotation.AnnotationText="o Medical/Blank Claims: ‘RT062'&#xA;o Behavioral Claims: ‘RT002’&#xA;Reference BRD OB010 V1&#xA;By:- Himanshu (14-09-2022)." Condition="[string.IsNullOrWhiteSpace(in_ClaimObject.claimHeader.contractClaimType)]" DisplayName="If strClaimType is Null or empty, throw error else Continue" sap:VirtualizedContainerService.HintSize="1668,1172" sap2010:WorkflowViewState.IdRef="If_14">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Throw DisplayName="Throw SE : Unable to extract ContractClaimType" Exception="[new Exception(&quot;Route_Claims_RV017 Workflow --&gt; Unable to extract ContractClaimType&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_5" />
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Route API  Sequence" sap:VirtualizedContainerService.HintSize="1423,946" sap2010:WorkflowViewState.IdRef="Sequence_20">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="strContractClaimType" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign : strContractClaimType" sap:VirtualizedContainerService.HintSize="1381,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strContractClaimType]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[If(in_ClaimObject.claimHeader.contractClaimType = Optum.Cirrus.CirrusReference.ContractClaimType.Medical, "Medical", "Behavioral")]</InArgument>
                  </Assign.Value>
                </Assign>
                <If sap2010:Annotation.AnnotationText="checking whether Contract Claim Type is Medical or Behavioral Claim:&#xA;M=Medical.&#xA;B=Behavioral." Condition="[strContractClaimType.ToLower.Trim = &quot;behavioral&quot;]" DisplayName="Route API  If" sap:VirtualizedContainerService.HintSize="1381,754" sap2010:WorkflowViewState.IdRef="If_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Assign DisplayName="Route code Assign" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strRouteCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[in_Config("OB010_BehavioralRoute").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Instititional Sequence" sap:VirtualizedContainerService.HintSize="1074,544" sap2010:WorkflowViewState.IdRef="Sequence_19">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[strContractClaimType.ToLower.Trim = &quot;medical&quot;]" DisplayName="Route API If" sap:VirtualizedContainerService.HintSize="1032,452" sap2010:WorkflowViewState.IdRef="If_12">
                        <If.Then>
                          <Sequence DisplayName="Check Bill Sequence" sap:VirtualizedContainerService.HintSize="611,302" sap2010:WorkflowViewState.IdRef="Sequence_22">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[Double.Parse(totalBilledValue) &lt; Double.Parse(in_Config(&quot;OB010_BilledAmount&quot;).ToString)]" DisplayName="check for billed value" sap:VirtualizedContainerService.HintSize="569,210" sap2010:WorkflowViewState.IdRef="If_16">
                              <If.Then>
                                <Assign DisplayName="Route code Assign" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strRouteCode]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[in_Config("Routing_Code").ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                              <If.Else>
                                <Assign DisplayName="Route code Assign" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strRouteCode]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[in_Config("Billed_RouteCode").ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Other the prof or inst Sequence" sap:VirtualizedContainerService.HintSize="376,247" sap2010:WorkflowViewState.IdRef="Sequence_21">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Prof inst Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Claim type is not Medical nor Behavioral&quot;]" />
                            <Throw DisplayName="SE: Throw" Exception="[new Exception(&quot;Claim type is not Professional nor Institutional, claim Id: &quot; + in_ClaimId)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_6" />
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Else>
          </If>
          <Assign DisplayName="Assign strRouteMessage" sap:VirtualizedContainerService.HintSize="1668,60" sap2010:WorkflowViewState.IdRef="Assign_33">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strRouteMessage]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("Gen_Route_Message").ToString]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <If Condition="[RevenueArrangement = &quot;ASO&quot;]" DisplayName="Revnue Arrangement Check" sap:VirtualizedContainerService.HintSize="653,402" sap2010:WorkflowViewState.IdRef="If_19">
          <If.Then>
            <Sequence DisplayName="Route Sequence" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_23">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign RT086 As Route Code" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strRouteCode]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_Config("OB010_ASO_RouteCode").ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign strRouteMessage" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strRouteMessage]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_Config("OB010_ASO_RouteMessage").ToString]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Route Sequence" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_24">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign : RT050 As Route code" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strRouteCode]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_Config("OB010_OtherThanASO_RouteCode").ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign strRouteMessage" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strRouteMessage]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_Config("OB010_OtherThanASO_RouteMessage").ToString]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Else>
        </If>
      </If.Else>
    </If>
    <Assign DisplayName="Route lines Assign" sap:VirtualizedContainerService.HintSize="2408,60" sap2010:WorkflowViewState.IdRef="Assign_20">
      <Assign.To>
        <OutArgument x:TypeArguments="s:Int32[]">[claimLineToRoute]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:Int32[]">[DirectCast(in_ClaimObject, Optum.Cirrus.Model.Claims).claimEditList.Where(Function(x) x.editCode=in_EditCode AndAlso String.IsNullOrWhiteSpace(x.resolutionType)).Select(Function(x) x.claimLineNum).ToArray]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Route_Claim_API workflow" sap:VirtualizedContainerService.HintSize="2408,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Reusable Component\Route_Claim_API.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:Object" x:Key="in_ClaimObject">[in_ClaimObject]</InArgument>
        <InArgument x:TypeArguments="s:Int32[]" x:Key="in_ClaimLines">[claimLineToRoute]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_RouteCode">[strRouteCode]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_RouteMessage">[strRouteMessage]</InArgument>
        <OutArgument x:TypeArguments="x:Boolean" x:Key="out_IsSuccess">[IsRouteSuccess]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_EndPoint">[in_Config("CirrusAPI_BaseUrl").ToString() + in_Config("CirrusAPI_Resource_ClaimRoute").ToString()]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="Post route Log Message" sap:VirtualizedContainerService.HintSize="2408,93" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Post Routing Check Started.&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <If Condition="[IsRouteSuccess]" DisplayName="If route success " sap:VirtualizedContainerService.HintSize="2408,397" sap2010:WorkflowViewState.IdRef="If_11">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:LogMessage DisplayName="Post route Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Post Routing Check Completed.&quot;]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:LogMessage>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Error route Sequence" sap:VirtualizedContainerService.HintSize="376,247" sap2010:WorkflowViewState.IdRef="Sequence_18">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Error route Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;found an error while post Route check &quot;]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
          <Throw DisplayName="Throw : SE : found an error while post Route check " Exception="[new Exception(&quot;Routing Faulted.&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>